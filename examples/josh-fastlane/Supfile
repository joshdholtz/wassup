require 'time'
require 'rest-client'
require 'json'
require 'colorize'

require 'curses'

fastlane_community_prs = []
fastlane_prs = []

#
# Top Left 1
#
add_pane do |pane|
  pane.height = 0.25
  pane.width = 0.35
  pane.top = 0
  pane.left = 0

  pane.highlight = false

  pane.title = "Stats: fastlane-community"

  pane.interval = 2
  pane.content do |builder|
    days_1 = 0
    days_7 = 0
    days_30 = 0
    days_60 = 0
    days_365 = 0

    fastlane_community_prs.each do |pr|
      created_at = pr["created_at"] 
      date = Time.parse(created_at)
      days = (Time.now - date).to_i / (24 * 60 * 60)

      days_1 +=1 if days <= 1
      days_7 +=1 if days <= 7
      days_30 +=1 if days <= 30
      days_60 +=1 if days <= 60
      days_365 +=1 if days <= 365
    end

    builder.add_row("Opened today: #{days_1}")
    builder.add_row("Opened 7 days: #{days_7}")
    builder.add_row("Opened 30 days: #{days_30}")
    builder.add_row("Opened 60 days: #{days_60}")
    builder.add_row("Opened 365 days: #{days_365}")
  end
end

#
# Top Left 2
#
add_pane do |pane|
  pane.height = 0.25
  pane.width = 0.35
  pane.top = 0.25
  pane.left = 0

  pane.highlight = false

  pane.title = "Stats: fastlane/fastlane"

  pane.interval = 2
  pane.content do |builder|
    days_1 = 0
    days_7 = 0
    days_30 = 0
    days_45 = 0
    days_60 = 0
    days_60_plus = 0

    fastlane_prs.each do |pr|
      created_at = pr["created_at"] 
      date = Time.parse(created_at)
      days = (Time.now - date).to_i / (24 * 60 * 60)

      days_1 +=1 if days <= 1
      days_7 +=1 if days <= 7
      days_30 +=1 if days <= 30
      days_45 +=1 if days <= 45
      days_60 +=1 if days <= 60
      days_60_plus +=1 if days > 60
    end

    builder.add_row("Opened today: #{days_1}")
    builder.add_row("Opened 7 days: #{days_7}")
    builder.add_row("Opened 30 days: #{days_30}")
    builder.add_row("Opened 45 days: #{days_45}")
    builder.add_row("Opened 60 days: #{days_60}")
    builder.add_row("More than 60 days: #{days_60_plus}")
  end
end

#
# Top Right
#
add_pane do |pane|
  pane.height = 0.5
  pane.width = 0.65
  pane.top = 0
  pane.left = 0.35

  pane.highlight = true

  pane.title = "Circle CI - fastlane/fastlane"

  pane.interval = 60 * 5
  pane.show_refresh = true
  pane.content do |builder|
    resp = RestClient::Request.execute(
      method: :get, 
      url: "https://circleci.com/api/v2/project/github/fastlane/fastlane/pipeline", 
      headers: { "Circle-Token": ENV["WASSUP_CIRCLE_CI_API_TOKEN"] }
    )
    json = JSON.parse(resp)
    json["items"].select do |item|
      date = Time.parse(item["updated_at"])
      days = (Time.now - date).to_i / (24 * 60 * 60)
      days < 14
    end.map do |item|
      id = item["id"]
      number = item["number"]
      message = (item["vcs"]["commit"] || {})["subject"]
      login = item["trigger"]["actor"]["login"]

      resp = RestClient::Request.execute(
        method: :get, 
        url: "https://circleci.com/api/v2/pipeline/#{id}/workflow", 
        headers: { "Circle-Token": ENV["WASSUP_CIRCLE_CI_API_TOKEN"] }
      )
      json = JSON.parse(resp)
      workflow = json["items"].first
      status = workflow["status"]

      if status == "failed"
        status = "[fg=red]#{status}[fg=white]"
      elsif status == "success"
        status = "[fg=green]#{status}[fg=white]"
      else
        status = "[fg=yellow]#{status}[fg=white]"
      end

      display = "#{number} (#{status}) by #{login} - #{message}"
      object = [item, workflow]

      builder.add_row(display, object)
    end
  end
  pane.selection do |data|
    workflow = data[1]

    slug = workflow["project_slug"]
    pipeline_number = workflow["pipeline_number"]
    workflow_id = workflow["id"]

    url = "https://app.circleci.com/pipelines/#{slug}/#{pipeline_number}/workflows/#{workflow_id}"
    `open #{url}`
  end
  pane.selection('o') do |data|
    pipeline = data[0]
    url = pipeline["vcs"]["review_url"]
    `open #{url}`
  end
end

#
# Bottom Right
#
add_pane do |pane|
  pane.height = 0.5
  pane.width = 0.5
  pane.top = 0.5
  pane.left = 0

  pane.highlight = true

  pane.title = "Open PRs - fastlane-community"

  pane.interval = 60 * 5
  pane.show_refresh = true
  pane.content do |builder|
    fastlane_community_prs = []

    resp = RestClient::Request.execute(
      method: :get, 
      url: "https://api.github.com/orgs/fastlane-community/repos", 
      user: ENV["WASSUP_GITHUB_USERNAME"],
      password: ENV["WASSUP_GITHUB_ACCESS_TOKEN"]
    )
    json = JSON.parse(resp)
    json.map do |repo|
      name = repo["name"]
      full_name = repo["full_name"]

      resp = RestClient::Request.execute(
        method: :get, 
        url: "https://api.github.com/repos/#{full_name}/pulls",
        user: ENV["WASSUP_GITHUB_USERNAME"],
        password: ENV["WASSUP_GITHUB_ACCESS_TOKEN"]
      )
      json = JSON.parse(resp)
      prs = json.map do |pr|
        fastlane_community_prs << pr

        number = pr["number"]
        title = pr["title"]
        created_at = pr["created_at"]

        number_formatted = '%5.5s' % "##{number}"

        date = Time.parse(created_at)
        days = (Time.now - date).to_i / (24 * 60 * 60)
        days_formatted = '%3.3s' % days.to_s

        display = "[fg=yellow]#{number_formatted}[fg=cyan] #{days_formatted}d ago[fg=white] #{title}"
        builder.add_row(display, pr, page: name)
      end
    end
  end
  pane.selection do |data|
    url = data["html_url"] 
    `open #{url}`
  end
end


#
# Bottom Right
#
add_pane do |pane|
  pane.height = 0.5
  pane.width = 0.5
  pane.top = 0.5
  pane.left = 0.5

  pane.highlight = true

  pane.title = "Open PRs - fastlane/fastlane"

  pane.interval = 60 * 5
  pane.show_refresh = true
  pane.content do |builder|
    fastlane_prs = []

    resp = RestClient::Request.execute(
      method: :get, 
      url: "https://api.github.com/repos/fastlane/fastlane/pulls?per_page=100", 
      user: ENV["WASSUP_GITHUB_USERNAME"],
      password: ENV["WASSUP_GITHUB_ACCESS_TOKEN"]
    )
    json = JSON.parse(resp)
    json.map do |pr|
      fastlane_prs << pr

      number = pr["number"]
      title = pr["title"]
      created_at = pr["created_at"]

      date = Time.parse(created_at)
      days = (Time.now - date).to_i / (24 * 60 * 60)
      days_formatted = '%3.3s' % days.to_s

      display = "[fg=yellow]##{number}[fg=cyan] #{days_formatted}d ago[fg=white] #{title}"
      builder.add_row(display, pr)
    end
  end
  pane.selection do |data|
    url = data["html_url"] 
    `open #{url}`
  end
end
